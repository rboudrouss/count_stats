{"version":3,"sources":["components/Cards/Cards.module.css","api/index.ts","components/Cards/Cards.tsx","components/Chart/Chart.tsx","components/UserPicker/UserPicker.tsx","App.tsx","index.tsx","app.module.css","components/Chart/Chart.module.css"],"names":["module","exports","makefunc","url","args","a","api_url","Object","entries","key","value","axios","get","response","data","console","log","getMsgInter","getUsers","getCount","Cards","props","podium","top1","top2","top3","count","users","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Avatar","alt","name","src","avatar_url","Typography","variant","color","start","end","duration","Chart","useState","setData","selectedUser","useEffect","max","id","data1","fetchAPI","lineChart","labels","map","datasets","label","borderColor","fill","UserPicker","selectedUserChange","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","values","user","i","App","state","bind","this","setState","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a0627ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__205Xh\",\"card\":\"Cards_card__1T64S\",\"top1\":\"Cards_top1__3xfRs\",\"top2\":\"Cards_top2__3iZRF\",\"top3\":\"Cards_top3__3aWLQ\"};","import axios from \"axios\";\r\n\r\nconst makefunc = (url:String) => {\r\n    const API_URL = \"https://count-stats.herokuapp.com/api/\"; //TODO hardcoded for now\r\n    const func = async (args?:{id?:String, mind?:String, maxd?:String, info?:String, max?:number, empty?:boolean, inter?:String})=>{\r\n        let api_url = API_URL + url;\r\n        if (args){\r\n            api_url += \"?\"\r\n            for (const [key,value] of Object.entries(args)){\r\n                if(value){\r\n                    api_url += `&${key}=${value}`\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            const response = await axios.get(api_url);\r\n            return response.data; // TODO find a way to type this \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return func\r\n}\r\n\r\n// Message\r\n\r\nexport const getHistory  = makefunc(\"message/history\");\r\nexport const getUserMsg  = makefunc(\"message/usermsg\");\r\nexport const getDateMsg  = makefunc(\"message/datemsg\");\r\nexport const getUserDate = makefunc(\"message/userdate\");\r\nexport const getMsgInfo  = makefunc(\"message/msginfo\");\r\nexport const getMsgInter = makefunc(\"message/inter\");\r\nexport const getMessage  = makefunc(\"message\");\r\n\r\n// users\r\nexport const getAllUsers = makefunc(\"user/users\");\r\nexport const getUser     = makefunc(\"user/user\");\r\nexport const getUsers    = makefunc(\"user\");\r\n\r\n// count data\r\nexport const getCount    = makefunc(\"count\");\r\n\r\n\r\ninterface Count{\r\n    last_update:number[];\r\n    podium:{\r\n        top1:String;\r\n        top2:String;\r\n        top3:String;\r\n    };\r\n    count:{\r\n        String:number\r\n    }\r\n}\r\n\r\ninterface Message{\r\n    message_id:number;\r\n    author_id:number;\r\n    content:String;\r\n    date: number[];\r\n\r\n}\r\n\r\ninterface User{\r\n    avatar_url:String\r\n    name:String\r\n    discriminator:String\r\n    id:String \r\n\r\n}\r\n\r\ninterface Users{\r\n    String:User\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Avatar,\r\n  StylesProvider,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = (props: any) => {\r\n  console.log(props);\r\n  // TODO when no data\r\n  const {\r\n    podium: { top1, top2, top3 },\r\n    count,\r\n    users,\r\n  } = props;\r\n  if (!top1) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.card, styles.top1)}\r\n        >\r\n          <CardContent>\r\n            <Avatar alt={users[top1]?.name} src={users[top1]?.avatar_url} />\r\n            <Typography variant=\"h5\">{users[top1]?.name}</Typography>\r\n            <Typography color=\"textSecondary\">Top 1</Typography>\r\n            <Typography variant=\"body2\">\r\n              <CountUp start={0} end={count[top1]} duration={3} /> messages !\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.card, styles.top2)}\r\n        >\r\n          <CardContent>\r\n            <Avatar alt={users[top2]?.name} src={users[top2]?.avatar_url} />\r\n            <Typography variant=\"h5\">{users[top2]?.name}</Typography>\r\n            <Typography color=\"textSecondary\">Top 2</Typography>\r\n            <Typography variant=\"body2\">\r\n              <CountUp start={0} end={count[top2]} duration={3} /> messages !\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.card, styles.top3)}\r\n        >\r\n          <CardContent>\r\n            <Avatar alt={users[top3]?.name} src={users[top3]?.avatar_url} />\r\n            <Typography variant=\"h5\">{users[top3]?.name}</Typography>\r\n            <Typography color=\"textSecondary\">Top 3</Typography>\r\n            <Typography variant=\"body2\">\r\n              <CountUp start={0} end={count[top3]} duration={3} /> messages !\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\nimport { getMsgInter } from \"../../api\";\r\n\r\nconst Chart = (props:any) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const selectedUser:String=props.selectedUser\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const data1 = await getMsgInter({ max: 10, id:selectedUser });\r\n      if (data1) {\r\n        setData(data1);\r\n      }\r\n    };\r\n\r\n    fetchAPI();\r\n  });\r\n\r\n  const lineChart = data ? (\r\n    <Line\r\n      data={{\r\n        labels: data?.map((item) => item[0]),\r\n        datasets: [\r\n          {\r\n            data: data?.map((item) => item[1]),\r\n            label: \"messages\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : (\r\n    <Line\r\n      data={{\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: 0,\r\n            label: \"User not Found\",\r\n            borderColor: \"#ff0000\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","// import React, { useEffect, useState } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\n// import { getAllUsers } from \"../../api\";\r\n\r\nimport styles from \"./UserPicker.module.css\";\r\n\r\nconst UserPicker = (props: any) => {\r\n  // const [users, setUsers] = useState({});\r\n  const users = props.users;\r\n  const selectedUserChange: any = props.selectedUserChange;\r\n  // useEffect(() => {\r\n  //   const fetchUsers = async () => {\r\n  //     const users_ = await getAllUsers();\r\n  //     if (users_) {\r\n  //       setUsers(users_);\r\n  //     }\r\n  //   };\r\n  //   console.log(users);\r\n\r\n  //   fetchUsers();\r\n  // }, [setUsers]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          selectedUserChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {Object.values(users).map((user: any, i: number) => (\r\n          <option key={i} value={user?.id}>\r\n            {user?.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UserPicker;\r\n","import React from \"react\";\r\n// import './App.css';\r\nimport styles from \"./app.module.css\";\r\n\r\nimport { getCount, getUsers } from \"./api\";\r\nimport { Cards, Chart, UserPicker } from \"./components\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    count: {},\r\n    podium: {},\r\n    users: {},\r\n    selectedUser: \"\",\r\n  };\r\n  \r\n  constructor(props: any) {\r\n    super(props);\r\n    this.selectedUserChange = this.selectedUserChange.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { podium, count } = await getCount();\r\n    const users = await getUsers();\r\n    this.setState({ podium, count, users });\r\n    console.log(users);\r\n  }\r\n\r\n  async selectedUserChange(selectedUser: string) {\r\n    this.setState({ selectedUser: selectedUser });\r\n  }\r\n\r\n  render() {\r\n    const { podium, count, users, selectedUser } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards podium={podium} count={count} users={users} />\r\n        <UserPicker\r\n          users={users}\r\n          selectedUserChange={this.selectedUserChange}\r\n        />\r\n        <Chart selectedUser={selectedUser}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2J2Ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1x5jS\"};"],"sourceRoot":""}