{"version":3,"sources":["components/Cards/Cards.module.css","api/index.ts","components/Cards/Cards.tsx","components/Chart/Chart.tsx","components/UserPicker/UserPicker.tsx","App.tsx","index.tsx","app.module.css"],"names":["module","exports","makefunc","url","args","a","api_url","Object","entries","key","value","axios","get","response","data","getMsgInter","getUsers","getCount","Cards","props","console","log","podium","top1","top2","top3","count","users","avatar_url","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Avatar","alt","name","src","Typography","variant","color","start","end","duration","Chart","useState","setData","useEffect","fetchAPI","lineChart","labels","map","datasets","label","borderColor","fill","UserPicker","App","state","this","setState","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,sB,wLCCzIC,EAAW,SAACC,GAmBd,OAjBU,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,sDAET,GADIC,EAFQ,6BAEYH,EACpBC,EAEA,IADAE,GAAW,IACX,MAA0BC,OAAOC,QAAQJ,GAAzC,eAAgD,EAAD,oBAAnCK,EAAmC,MAA/BC,EAA+B,QAEvCJ,GAAO,UAAOG,EAAP,YAAcC,IANxB,yBAWkBC,IAAMC,IAAIN,GAX5B,cAWCO,EAXD,yBAYEA,EAASC,MAZX,yFAAH,uDA2BDC,GALcb,EAAS,mBACTA,EAAS,mBACTA,EAAS,mBACTA,EAAS,oBACTA,EAAS,mBACTA,EAAS,kBAMvBc,GALcd,EAAS,WAGTA,EAAS,cACTA,EAAS,cACTA,EAAS,SAGvBe,EAAcf,EAAS,S,uGCwCrBgB,EAnED,SAACC,GAAgB,IAAD,oBAC5BC,QAAQC,IAAIF,GADgB,MAMxBA,EAHFG,OAAUC,EAHgB,EAGhBA,KAAMC,EAHU,EAGVA,KAAMC,EAHI,EAGJA,KACtBC,EAEEP,EAFFO,MACAC,EACER,EADFQ,MAEF,OAAKJ,GAGLH,QAAQC,IAAR,UAAYM,EAAMH,UAAlB,aAAY,EAAaI,YAEvB,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UACE,cAACF,EAAA,EAAD,CACEG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOP,MALpC,SAOE,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,IAAG,UAAEjB,EAAMJ,UAAR,aAAE,EAAasB,KAAMC,IAAG,UAAEnB,EAAMJ,UAAR,aAAE,EAAaK,aAClD,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAA0BrB,EAAMJ,UAAhC,aAA0B,EAAasB,OACvC,cAACE,EAAA,EAAD,CAAYE,MAAM,gBAAlB,mBACA,eAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACE,cAAC,IAAD,CAASE,MAAO,EAAGC,IAAKzB,EAAMH,GAAO6B,SAAU,IADjD,sBAKJ,cAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAON,MALpC,SAOE,eAACkB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,IAAG,UAAEjB,EAAMH,UAAR,aAAE,EAAaqB,KAAMC,IAAG,UAAEnB,EAAMH,UAAR,aAAE,EAAaI,aAClD,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAA0BrB,EAAMH,UAAhC,aAA0B,EAAaqB,OACvC,cAACE,EAAA,EAAD,CAAYE,MAAM,gBAAlB,mBACA,eAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACE,cAAC,IAAD,CAASE,MAAO,EAAGC,IAAKzB,EAAMF,GAAO4B,SAAU,IADjD,sBAKJ,cAACpB,EAAA,EAAD,CACEG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOL,MALpC,SAOE,eAACiB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,IAAG,UAAEjB,EAAMF,UAAR,aAAE,EAAaoB,KAAMC,IAAG,UAAEnB,EAAMF,UAAR,aAAE,EAAaG,aAClD,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAA0BrB,EAAMF,UAAhC,aAA0B,EAAaoB,OACvC,cAACE,EAAA,EAAD,CAAYE,MAAM,gBAAlB,mBACA,eAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACE,cAAC,IAAD,CAASE,MAAO,EAAGC,IAAKzB,EAAMD,GAAO2B,SAAU,IADjD,4BAjDD,6C,yBCmBIC,EAjCD,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXxC,EADW,KACLyC,EADK,KAGlBC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,sBAAApD,EAAA,kEACfkD,EADe,SACDxC,IADC,6EAAH,qDAGdK,QAAQC,IAAIP,GAEZ2C,OAGF,IAAMC,EAAY5C,EAChB,cAAC,OAAD,CACEA,KAAM,CACJ6C,OAAM,OAAE7C,QAAF,IAAEA,OAAF,EAAEA,EAAM8C,KAAI,SAACzB,GAAD,OAAQA,EAAK,MAC/B0B,SAAU,CAAC,CACT/C,KAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAM8C,KAAI,SAACzB,GAAD,OAAQA,EAAK,MAC5B2B,MAAM,WACNC,YAAY,UACZC,MAAK,OAIT,KAEJ,OACE,qBAAKnC,UAAWC,IAAOC,UAAvB,SACG2B,KC7BQO,EAJI,WACjB,OAAO,6CC6BMC,E,4MAxBbC,MAAQ,CACNzC,MAAO,GACPJ,OAAQ,GACRK,MAAO,I,8FAGT,kCAAAtB,EAAA,sEACkCY,IADlC,uBACUK,EADV,EACUA,OAAQI,EADlB,EACkBA,MADlB,SAEsBV,IAFtB,OAEQW,EAFR,OAGEyC,KAAKC,SAAS,CAAE/C,SAAQI,QAAOC,UAHjC,gD,0EAMA,WAAU,IAAD,EAC0ByC,KAAKD,MAA9B7C,EADD,EACCA,OAAQI,EADT,EACSA,MAAOC,EADhB,EACgBA,MACvB,OACE,sBAAKE,UAAWC,IAAOC,UAAvB,UACE,cAAC,EAAD,CAAOT,OAAQA,EAAQI,MAAOA,EAAOC,MAAOA,IAC5C,cAAC,EAAD,IACA,cAAC,EAAD,W,GAnBU2C,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,mBCR1B5E,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.7cec2cfb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__205Xh\",\"card\":\"Cards_card__1T64S\",\"top1\":\"Cards_top1__3xfRs\",\"top2\":\"Cards_top2__3iZRF\",\"top3\":\"Cards_top3__3aWLQ\"};","import axios from \"axios\";\r\n\r\nconst makefunc = (url:String) => {\r\n    const API_URL = \"http://127.0.0.1:8000/api/\"; //TODO hardcoded for now\r\n    const func = async (args?:{id?:String, mind?:String, maxd?:String, info?:String, max?:number, empty?:boolean, inter?:String})=>{\r\n        let api_url = API_URL + url;\r\n        if (args){\r\n            api_url += \"?\"\r\n            for (const [key,value] of Object.entries(args)){\r\n                if(value){\r\n                    api_url += `${key}=${value}`\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            const response = await axios.get(api_url);\r\n            return response.data; // TODO find a way to type this \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    return func\r\n}\r\n\r\n// Message\r\n\r\nexport const getHistory  = makefunc(\"message/history\");\r\nexport const getUserMsg  = makefunc(\"message/usermsg\");\r\nexport const getDateMsg  = makefunc(\"message/datemsg\");\r\nexport const getUserDate = makefunc(\"message/userdate\");\r\nexport const getMsgInfo  = makefunc(\"message/msginfo\");\r\nexport const getMsgInter = makefunc(\"message/inter\");\r\nexport const getMessage  = makefunc(\"message\");\r\n\r\n// users\r\nexport const getAllUsers = makefunc(\"user/users\");\r\nexport const getUser     = makefunc(\"user/users\");\r\nexport const getUsers    = makefunc(\"user\");\r\n\r\n// count data\r\nexport const getCount    = makefunc(\"count\");\r\n\r\n\r\ninterface Count{\r\n    last_update:number[];\r\n    podium:{\r\n        top1:String;\r\n        top2:String;\r\n        top3:String;\r\n    };\r\n    count:{\r\n        String:number\r\n    }\r\n}\r\n\r\ninterface Message{\r\n    message_id:number;\r\n    author_id:number;\r\n    content:String;\r\n    date: number[];\r\n\r\n}\r\n\r\ninterface User{\r\n    avatar_url:String\r\n    name:String\r\n    discriminator:String\r\n    id:String \r\n\r\n}\r\n\r\ninterface Users{\r\n    String:User\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Avatar,\r\n  StylesProvider,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = (props: any) => {\r\n  console.log(props);\r\n  const {\r\n    podium: { top1, top2, top3 },\r\n    count,\r\n    users,\r\n  } = props;\r\n  if (!top1) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  console.log(users[top2]?.avatar_url);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.card, styles.top1)}\r\n        >\r\n          <CardContent>\r\n            <Avatar alt={users[top1]?.name} src={users[top1]?.avatar_url} />\r\n            <Typography variant=\"h5\">{users[top1]?.name}</Typography>\r\n            <Typography color=\"textSecondary\">Top 1</Typography>\r\n            <Typography variant=\"body2\">\r\n              <CountUp start={0} end={count[top1]} duration={3} /> messages !\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.card, styles.top2)}\r\n        >\r\n          <CardContent>\r\n            <Avatar alt={users[top2]?.name} src={users[top2]?.avatar_url} />\r\n            <Typography variant=\"h5\">{users[top2]?.name}</Typography>\r\n            <Typography color=\"textSecondary\">Top 2</Typography>\r\n            <Typography variant=\"body2\">\r\n              <CountUp start={0} end={count[top2]} duration={3} /> messages !\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={4}\r\n          className={cx(styles.card, styles.top3)}\r\n        >\r\n          <CardContent>\r\n            <Avatar alt={users[top3]?.name} src={users[top3]?.avatar_url} />\r\n            <Typography variant=\"h5\">{users[top3]?.name}</Typography>\r\n            <Typography color=\"textSecondary\">Top 3</Typography>\r\n            <Typography variant=\"body2\">\r\n              <CountUp start={0} end={count[top3]} duration={3} /> messages !\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\nimport { getMsgInter } from \"../../api\";\r\n\r\n\r\nconst Chart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setData(await getMsgInter());\r\n    };\r\n    console.log(data);\r\n\r\n    fetchAPI();\r\n  });\r\n\r\n  const lineChart = data ? (\r\n    <Line\r\n      data={{\r\n        labels: data?.map((item)=>item[0]),\r\n        datasets: [{\r\n          data:data?.map((item)=>item[1]),\r\n          label:\"messages\",\r\n          borderColor:\"#3333ff\",\r\n          fill:true\r\n        }],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nconst UserPicker = () => {\r\n  return <h1>UserPicker</h1>;\r\n};\r\n\r\nexport default UserPicker;\r\n","import React from \"react\";\r\n// import './App.css';\r\nimport styles from \"./app.module.css\";\r\n\r\nimport { getCount, getUsers } from \"./api\";\r\nimport { Cards, Chart, UserPicker } from \"./components\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    count: {},\r\n    podium: {},\r\n    users: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { podium, count } = await getCount();\r\n    const users = await getUsers();\r\n    this.setState({ podium, count, users });\r\n  }\r\n\r\n  render() {\r\n    const { podium, count, users } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards podium={podium} count={count} users={users} />\r\n        <Chart />\r\n        <UserPicker />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2J2Ci\"};"],"sourceRoot":""}