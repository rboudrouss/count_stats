{"version":3,"sources":["app.module.css","api/index.ts","components/Cards/Cards.tsx","components/Chart/Chart.tsx","components/UserPicker/UserPicker.tsx","App.tsx","index.tsx"],"names":["module","exports","require","count","last_update","podium","history","users","Cards","props","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","CardContent","Typography","color","variant","Chart","UserPicker","App","state","this","lastUpdate","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,UAAY,yB,qsDCAgBC,EAAQ,IAAvCC,E,EAAAA,MAAOC,E,EAAAA,YAAaC,E,EAAAA,OACtBC,EAAUJ,EAAQ,IAClBK,EAAQL,EAAQ,I,wDC6CdM,EAtCD,SAACC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAWC,IAAOC,UAAvB,UACE,cAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAtB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAlB,mBACA,cAACD,EAAA,EAAD,CAAYE,QAAQ,KAApB,kBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,QAApB,2BACA,cAACF,EAAA,EAAD,CAAYC,MAAM,gBAAlB,yBAIN,cAACR,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAtB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAlB,mBACA,cAACD,EAAA,EAAD,CAAYE,QAAQ,KAApB,kBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,QAApB,2BACA,cAACF,EAAA,EAAD,CAAYC,MAAM,gBAAlB,yBAIN,cAACR,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAtB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAlB,mBACA,cAACD,EAAA,EAAD,CAAYE,QAAQ,KAApB,kBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,QAApB,2BACA,cAACF,EAAA,EAAD,CAAYC,MAAM,gBAAlB,6BClCGE,EAJD,WACZ,OAAO,wCCGMC,EAJI,WACjB,OAAO,6CCyBMC,E,4MApBbC,MAAQ,CACNzB,QACAI,QACAD,UACAF,cACAC,U,4CAGF,WAAU,IAAD,EAC8BwB,KAAKD,MAAnCvB,EADA,EACAA,OAAQE,EADR,EACQA,MAAOH,EADf,EACeA,YACtB,OACE,sBAAKQ,UAAWC,IAAOC,UAAvB,UACE,cAAC,EAAD,CAAOT,OAAQA,EAAQE,MAAOA,EAAOuB,WAAY1B,IACjD,cAAC,EAAD,IACA,cAAC,EAAD,W,GAfU2B,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f31a8102.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\"};","// import axios from \"axios\";\nexport const { count, last_update, podium } = require(\"./data/count\") as Count;\nexport const history = require(\"./data/history\") as Message[];\nexport const users = require(\"./data/users\") as Users;\n\ninterface Count{\n    last_update:number[];\n    podium:{\n        top1:String;\n        top2:String;\n        top3:String;\n    };\n    count:{\n        String:number\n    }\n}\n\ninterface Message{\n    message_id:number;\n    author_id:number;\n    content:String;\n    date: number[];\n\n}\n\ninterface User{\n    avatar_url:String\n    name:String\n    discriminator:String\n    id:number // TODO change this to String later\n\n}\n\ninterface Users{\n    String:User\n}\n\n\n// const url = window.location.href;\n\n// export const fetchCount = async () => {\n//   try {\n//     const response = await axios.get(url+\"/api/count\");\n//     return response;\n//   } catch (error) {}\n// };\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  // StylesProvider,\n} from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = (props: any) => {\n  console.log(props);\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card}>\n          <CardContent>\n            <Typography color=\"textSecondary\">Top 1</Typography>\n            <Typography variant=\"h5\">Name</Typography>\n            <Typography variant=\"body2\">DATA messages</Typography>\n            <Typography color=\"textSecondary\">DATE</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card}>\n          <CardContent>\n            <Typography color=\"textSecondary\">Top 2</Typography>\n            <Typography variant=\"h5\">Name</Typography>\n            <Typography variant=\"body2\">DATA messages</Typography>\n            <Typography color=\"textSecondary\">DATE</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card}>\n          <CardContent>\n            <Typography color=\"textSecondary\">Top 3</Typography>\n            <Typography variant=\"h5\">Name</Typography>\n            <Typography variant=\"body2\">DATA messages</Typography>\n            <Typography color=\"textSecondary\">DATE</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\n\nconst Chart = () => {\n  return <h1>Chart</h1>;\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst UserPicker = () => {\n  return <h1>UserPicker</h1>;\n};\n\nexport default UserPicker;\n","import React from \"react\";\n// import './App.css';\nimport styles from \"./app.module.css\";\n\nimport { count, users, history, podium, last_update} from \"./api/\";\nimport { Cards, Chart, UserPicker } from \"./components\";\n\nclass App extends React.Component {\n  state = {\n    count,\n    users,\n    history,\n    last_update,\n    podium\n  }\n\n  render() {\n    const {podium, users, last_update} = this.state\n    return (\n      <div className={styles.container}>\n        <Cards podium={podium} users={users} lastUpdate={last_update}/>\n        <Chart />\n        <UserPicker />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}