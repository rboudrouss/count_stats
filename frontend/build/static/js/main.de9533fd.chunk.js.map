{"version":3,"sources":["components/Cards/Cards.module.css","api/index.ts","components/Cards/Cards.tsx","components/Chart/Chart.tsx","components/UserPicker/UserPicker.tsx","components/UserCard/UserCard.tsx","components/UserList/UserList.tsx","pages/MainPage/MainPage.tsx","pages/ListPage/ListPage.tsx","pages/UserPage/UserPage.tsx","App.tsx","index.tsx","components/UserList/UserList.module.css","pages/MainPage/MainPage.module.css","components/Chart/Chart.module.css","components/UserPicker/UserPicker.module.css"],"names":["module","exports","makefunc","url","args","a","api_url","Object","entries","key","value","console","log","axios","get","response","data","getMsgInter","getUsers","getCount","Cards","props","podium","top1","top2","top3","count","users","className","styles","container","Grid","spacing","justify","user","top","cx","card","Chart","useState","setData","selectedUser","useEffect","empty","id","data1","fetchAPI","lineChart","labels","map","item","datasets","label","borderColor","fill","UserPicker","selectedUserChange","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","values","i","name","UserCard","component","Card","CardContent","Avatar","alt","src","avatar_url","Typography","variant","color","start","end","duration","UserList","keys","MainPage","state","bind","allCount","this","setState","React","Component","ListPage","UserPage","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de9533fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__205Xh\",\"card\":\"Cards_card__1T64S\",\"top1\":\"Cards_top1__3xfRs\",\"top2\":\"Cards_top2__3iZRF\",\"top3\":\"Cards_top3__3aWLQ\"};","import axios from \"axios\";\r\n\r\nconst makefunc = (url:String) => {\r\n    const API_URL = \"https://count-stats.herokuapp.com/api/\"; //TODO hardcoded for now\r\n    const func = async (args?:{\r\n        id?:String,\r\n        mind?:String,\r\n        maxd?:String, \r\n        info?:String, \r\n        max?:number, \r\n        empty?:boolean, \r\n        inter?:String\r\n    }) => {\r\n        let api_url = API_URL + url;\r\n        if (args){\r\n            api_url += \"?\"\r\n            for (const [key,value] of Object.entries(args)){\r\n                if(value){\r\n                    api_url += `&${key}=${value}`\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            console.log(`calling ${api_url}`)\r\n            const response = await axios.get(api_url);\r\n            return response.data; // TODO find a way to type this \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return func\r\n}\r\n\r\n// Message\r\n\r\nexport const getHistory  = makefunc(\"message/history\");\r\nexport const getUserMsg  = makefunc(\"message/usermsg\");\r\nexport const getDateMsg  = makefunc(\"message/datemsg\");\r\nexport const getUserDate = makefunc(\"message/userdate\");\r\nexport const getMsgInfo  = makefunc(\"message/msginfo\");\r\nexport const getMsgInter = makefunc(\"message/inter\");\r\nexport const getMessage  = makefunc(\"message\");\r\n\r\n// users\r\nexport const getAllUsers = makefunc(\"user/users\");\r\nexport const getUser     = makefunc(\"user/user\");\r\nexport const getUsers    = makefunc(\"user\");\r\n\r\n// count data\r\nexport const getCount    = makefunc(\"count\");\r\n\r\n\r\ninterface Count{\r\n    last_update:number[];\r\n    podium:{\r\n        top1:String;\r\n        top2:String;\r\n        top3:String;\r\n    };\r\n    count:{\r\n        String:number\r\n    }\r\n}\r\n\r\ninterface Message{\r\n    message_id:number;\r\n    author_id:number;\r\n    content:String;\r\n    date: number[];\r\n\r\n}\r\n\r\ninterface User{\r\n    avatar_url:String\r\n    name:String\r\n    discriminator:String\r\n    id:String \r\n\r\n}\r\n\r\ninterface Users{\r\n    String:User\r\n}\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid, Avatar } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nimport UserList from \"../UserList/UserList\";\r\nimport { UserCard } from \"..\";\r\n\r\nconst Cards = (props: any) => {\r\n  if (!props.podium) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  var {\r\n    podium: { top1, top2, top3 },\r\n    count,\r\n    users,\r\n  } = props;\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <UserCard\r\n          user={top1}\r\n          count={count}\r\n          users={users}\r\n          top={1}\r\n          className={cx(styles.card, styles.top1)}\r\n        />\r\n        <UserCard\r\n          user={top2}\r\n          count={count}\r\n          users={users}\r\n          top={2}\r\n          className={cx(styles.card, styles.top2)}\r\n        />\r\n        <UserCard\r\n          user={top3}\r\n          count={count}\r\n          users={users}\r\n          top={3}\r\n          className={cx(styles.card, styles.top3)}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\nimport { getMsgInter } from \"../../api\";\r\n\r\nconst Chart = (props: any) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const selectedUser: String = props.selectedUser;\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const data1 = await getMsgInter({\r\n        // max: 10,\r\n        empty: true,\r\n        id: selectedUser,\r\n      });\r\n      if (data1) {\r\n        setData(data1);\r\n      }\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [selectedUser]); // disabled autoupdate\r\n\r\n  const lineChart = data ? (\r\n    <Line\r\n      data={{\r\n        labels: data?.map((item) => item[0]),\r\n        datasets: [\r\n          {\r\n            data: data?.map((item) => item[1]),\r\n            label: \"messages\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : (\r\n    <Line\r\n      data={{\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: 0,\r\n            label: \"User not Found\",\r\n            borderColor: \"#ff0000\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./UserPicker.module.css\";\r\n\r\nconst UserPicker = (props: any) => {\r\n  const users = props.users ? props.users : {};\r\n  const selectedUserChange: any = props.selectedUserChange;\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          selectedUserChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {Object.values(users).map((user: any, i: number) => (\r\n          <option key={i} value={user?.id}>\r\n            {user?.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UserPicker;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid, Avatar } from \"@material-ui/core\";\r\nimport styles from \"./UserCard.module.css\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst UserCard = (props: Props) => {\r\n  if (!props.users) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  var { count, users, user, top, className } = props;\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid item component={Card} className={className}>\r\n        <CardContent>\r\n          <Avatar alt={users[user]?.name} src={users[user]?.avatar_url} />\r\n          <Typography variant=\"h5\">{users[user]?.name}</Typography>\r\n          <Typography color=\"textSecondary\">Top {top}</Typography>\r\n          <Typography variant=\"body2\">\r\n            <CountUp\r\n              start={0}\r\n              end={count[user] ? count[user] : 0}\r\n              duration={3}\r\n            />{\" \"}\r\n            messages !\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n\r\ntype Props = {\r\n  user: string;\r\n  count: any;\r\n  users: any;\r\n  top: number;\r\n  className?: any;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./UserList.module.css\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport UserCard from \"../UserCard/UserCard\";\r\n\r\nconst UserList = (props: Props) => {\r\n  if (!props.users) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  var { count, users, podium } = props;\r\n  return (\r\n    <div className={styles.container}>\r\n      {Object.keys(podium).map((top: any, i: number) => (\r\n        <UserCard\r\n          key={i}\r\n          user={podium[top]}\r\n          top={top} // FIXME\r\n          count={count}\r\n          users={users}\r\n          className={styles.card}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\ntype Props = {\r\n  count: any;\r\n  users: any;\r\n  podium: any;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./MainPage.module.css\";\r\n\r\nimport { getCount, getUsers } from \"../../api\";\r\nimport { Cards, Chart, UserPicker } from \"../../components\";\r\n\r\nclass MainPage extends React.Component {\r\n  state = {\r\n    count: {},\r\n    podium: {},\r\n    users: {},\r\n    selectedUser: \"\",\r\n  };\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.selectedUserChange = this.selectedUserChange.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const allCount = await getCount();\r\n    const { podium, count } = allCount ? allCount : { podium: {}, count: {} };\r\n    const users = await getUsers();\r\n    this.setState({ podium, count, users });\r\n  }\r\n\r\n  async selectedUserChange(selectedUser: string) {\r\n    this.setState({ selectedUser: selectedUser });\r\n  }\r\n\r\n  render() {\r\n    const { podium, count, users, selectedUser } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards podium={podium} count={count} users={users} />\r\n        <UserPicker\r\n          users={users}\r\n          selectedUserChange={this.selectedUserChange}\r\n        />\r\n        <Chart selectedUser={selectedUser} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport { getCount, getUsers } from \"../../api\";\r\nimport { UserList } from \"../../components\";\r\n\r\nimport styles from \"./ListPage.module.css\";\r\n\r\nclass ListPage extends React.Component {\r\n  state = {\r\n    users: {},\r\n    count: {},\r\n    podium: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { podium, count } = await getCount();\r\n    const users = await getUsers();\r\n    this.setState({ podium, count, users });\r\n  }\r\n\r\n  render() {\r\n    const {count, users, podium } = this.state\r\n    return <div className={styles.container}>\r\n      <UserList count={count} users={users} podium={podium}/>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default ListPage;\r\n\r\n// TODO TYPES\r\ntype Props = {\r\n  count: any;\r\n  podium: any;\r\n  users: any;\r\n};\r\n\r\ntype State = {\r\n  count: any;\r\n  podium: any;\r\n  users: any;\r\n  selectedUser: string;\r\n};\r\n","\r\nimport React from \"react\";\r\n\r\nimport styles from \"./UserPage.module.css\";\r\n\r\nclass UserPage extends React.Component <Props,State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <h1>UsersPage</h1>;\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n// TODO TYPES\r\ntype Props = {\r\n  count:any,\r\n  podium:any,\r\n  users:any,\r\n}\r\n\r\ntype State = {\r\n  count:any,\r\n  podium:any,\r\n  users:any,\r\n  selectedUser:string\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./app.module.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { MainPage, ListPage, UserPage } from \"./pages\";\r\nimport { getCount, getUsers } from \"./api\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route path=\"/list\" component={ListPage} />\r\n          <Route path=\"/user\" component={UserPage} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserList_container__1SDkF\",\"card\":\"UserList_card__XUKcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__JB8j6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1x5jS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"UserPicker_formControl__1DG73\"};"],"sourceRoot":""}